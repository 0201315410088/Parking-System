@model Credit

@{
    ViewData["Title"] = "Pay with Credit";
    Layout = "_Layout";
}

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f5f5f5; /* Light background for contrast */
        color: #333; /* Dark text for readability */
    }

    h2 {
        color: #007bff; /* Primary color for headings */
        text-align: center;
        margin-bottom: 20px;
        font-size: 36px; /* Larger title */
    }

    .container1 {
        max-width: 600px; /* Centered container */
        margin: 0 auto;
        background-color: white; /* White background for form */
        border-radius: 10px; /* Rounded corners */
        padding: 30px; /* Padding for inner spacing */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow */
    }

    .credit-info {
        font-size: 24px; /* Larger font for credit info */
        margin-bottom: 20px; /* Spacing below */
        text-align: center; /* Centered text */
        color: #28a745; /* Green color for positive info */
    }

    .error-message {
        color: #dc3545; /* Red for errors */
        font-weight: bold; /* Bold text for emphasis */
        text-align: center; /* Centered error messages */
        margin-bottom: 20px; /* Spacing below */
    }

    label {
        font-size: 18px; /* Larger label font */
        margin-top: 15px; /* Space above labels */
        display: block; /* Block display for full width */
    }

    input[type="number"] {
        width: 100%; /* Full width input */
        padding: 10px; /* Padding for input */
        font-size: 18px; /* Larger font for input */
        border: 2px solid #007bff; /* Blue border */
        border-radius: 5px; /* Rounded corners */
        margin-top: 5px; /* Space above inputs */
        margin-bottom: 20px; /* Space below inputs */
    }

    #card-element {
        padding: 10px; /* Padding for card element */
        border: 2px solid #007bff; /* Blue border */
        border-radius: 5px; /* Rounded corners */
        margin-bottom: 20px; /* Space below card element */
    }

    button {
        width: 100%; /* Full-width button */
        padding: 15px; /* Button padding */
        font-size: 18px; /* Larger button font */
        background-color: #007bff; /* Button background */
        color: white; /* Button text color */
        border: none; /* Remove border */
        border-radius: 5px; /* Rounded corners */
        cursor: pointer; /* Pointer cursor on hover */
        transition: background-color 0.3s; /* Smooth transition for hover */
    }

    button:hover {
        background-color: #0056b3; /* Darker blue on hover */
    }

    #card-errors {
        color: #dc3545; /* Red for errors */
        font-weight: bold; /* Bold text for emphasis */
        margin-top: 10px; /* Space above error messages */
        text-align: center; /* Centered error messages */
    }
</style>

<div class="container1">
    <h2><i class="bi bi-credit-card-2-back"></i> Pay with Credit</h2>

    @if (Model != null)
    {
        <p class="credit-info">Your available credit: ZAR @Model.AvailableCredit</p>
    }
    else
    {
        <p class="error-message">Error: Credit information not found.</p>
    }

    <form id="payment-form" asp-action="Pay" method="post">
        <label for="amount"><i class="bi bi-cash-stack"></i> Enter Amount to Pay (in ZAR):</label>
        <input type="number" name="amount" id="amount" step="0.01" min="0" required />

        <div id="card-element">
            <!-- A Stripe Element will be inserted here. -->
        </div>

        <div id="card-errors" role="alert"></div>

        <button type="submit">
            <i class="bi bi-check-circle"></i> Submit Payment
        </button>
    </form>
</div>

<script src="https://js.stripe.com/v3/"></script>

<script>
    var stripePublicKey = '@ViewBag.StripePublicKey'; // Make sure this key is not null

    if (!stripePublicKey) {
        console.error("Stripe Public Key is not set.");
    } else {
        var stripe = Stripe(stripePublicKey);
        var elements = stripe.elements();
        var card = elements.create('card');
        card.mount('#card-element');

        var form = document.getElementById('payment-form');
        form.addEventListener('submit', function (event) {
            event.preventDefault();

            stripe.createToken(card).then(function (result) {
                if (result.error) {
                    var errorElement = document.getElementById('card-errors');
                    errorElement.textContent = result.error.message;
                } else {
                    var hiddenInput = document.createElement('input');
                    hiddenInput.setAttribute('type', 'hidden');
                    hiddenInput.setAttribute('name', 'stripeToken');
                    hiddenInput.setAttribute('value', result.token.id);
                    form.appendChild(hiddenInput);

                    form.submit();
                }
            });
        });
    }
</script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css" />
